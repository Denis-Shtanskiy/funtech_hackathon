version: '3.3'

volumes:
  pg_data:
  static:
  media:
  service:

services:
  db:
    image: postgres:16.2-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - static:/static_backend/
      - media:/app/media/
    ports:
      - "8000:8000"
    expose:
      - 465

  nginx:
    build:
      context: ./nginx/
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "80:80"
    volumes:
      - static:/static
      - media:/app/media/
    depends_on:
      - backend
      - db

  redis:
    image: redis:alpine
    restart: on-failure
    ports:
      - 6379:6379

  celery:
    build: ./backend/
    command: celery -A funtech worker --loglevel=info
    env_file:
      - .env
    volumes:
      - ./service:/service
    depends_on:
      - redis
      - db

  frontend:
    image: ${DOCKER_USERNAME_FRONT}/${PROJECT_NAME_FRONT}
    env_file: .env
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static:/frontend_static
